{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","map","user","SearchBox","searchChange","placeholder","type","onChange","Scroll","style","height","overflow","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","console","log","target","value","searchfield","fetch","then","response","json","data","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAeeA,G,YAZF,SAACC,GACZ,OACI,sBAAKC,UAAU,mEAAf,UACE,qBAAKC,IAAK,wBAA0BF,EAAMG,GAAK,gBAAiBC,IAAI,KACpE,gCACE,oBAAIH,UAAU,KAAd,SAAoBD,EAAMK,OAC1B,+BAAOL,EAAMM,gBCURC,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACI,mCAEIA,EAAOC,KAAI,SAAAC,GACT,OACI,cAAC,EAAD,CACMP,GAAIO,EAAKP,GACTE,KAAMK,EAAKL,KACXC,MAAOI,EAAKJ,OAHPI,EAAKP,UCIjBQ,EAXG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACI,mCACE,uBAAOX,UAAU,iCACVY,YAAY,gBACZC,KAAK,SACLC,SAAUH,OCEVI,EARA,SAAChB,GACZ,OACI,qBAAKC,UAAU,SAASgB,MAAO,CAAEC,OAAQ,QAASC,SAAU,UAA5D,SACKnB,EAAMoB,YCqBJC,E,kDAvBX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CACVJ,UAAU,M,+BAOd,OAFmBG,KAAKJ,MAAjBC,SAGI,2DAEJG,KAAK1B,MAAMoB,a,GApBEQ,aC+CbC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,EAAKR,SAAS,CAAES,YAAaL,EAAMG,OAAOC,SAhB1C,EAAKb,MAAQ,CACXd,OAAQ,GACR4B,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKd,SAAS,CAAEnB,OAAQiC,S,+BASlB,IAAD,EACuBf,KAAKJ,MAA5Bd,EADA,EACAA,OAAQ4B,EADR,EACQA,YACTM,EAAiBlC,EAAOmC,QAAO,SAAAC,GACnC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASV,EAAYS,kBAGvD,OACI,sBAAK5C,UAAU,MAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtB,OAAQkC,e,GAlCdd,aCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3b065e8.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n      <div className=\"robocard tc pa3 ma2 br3 shadow-5 bg-light-green grow dib pointer\">\n        <img src={\"https://robohash.org/\" + props.id + \"?size=200x200\"} alt=\"\"/>\n        <div>\n          <h2 className=\"f5\">{props.name}</h2>\n          <span>{props.email}</span>\n        </div>\n      </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n      <>\n        {\n          robots.map(user => {\n            return (\n                <Card key={user.id}\n                      id={user.id}\n                      name={user.name}\n                      email={user.email}/>)\n          })\n        }\n      </>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return (\n      <>\n        <input className=\"db ml-auto mr-auto mt3 mb4 pa2\"\n               placeholder=\"Search Robots\"\n               type=\"search\"\n               onChange={searchChange}/>\n      </>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div className=\"ba bw2\" style={{ height: '500px', overflow: 'scroll' }}> \n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react'; \n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({\n            hasError: true\n        });\n    }\n\n    render() {\n        const {hasError} = this.state;\n\n        if (hasError) {\n            return <h1>Uh oh. An error occurred.</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport './App.css';\nimport CardList from '../Components/CardList';\nimport SearchBox from \"../Components/SearchBox\";\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundary from '../Components/ErrorBoundary';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ robots: data })\n    });\n  }\n\n  onSearchChange = (event) => {\n    console.log(event.target.value);\n    this.setState({ searchfield: event.target.value});\n  }\n\n  render() {\n    const {robots, searchfield} = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n\n    return (\n        <div className=\"App\">\n          <h1 className=\"f2\">Robofriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots}/>\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}